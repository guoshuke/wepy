<style lang="less">
    .container{
        width: 100vw;
        height: 100vh;
        justify-content: flex-start;
    }
    view{
        font-size: 14px;
        font-weight: 400;
    }
    .down{
        width: 20rpx;
        height: 13rpx;
        margin-left: 10rpx;
    }
    .topBar{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        font-size: 13px;
        font-weight: 300;
        color: #999;
        width:100vw;
        height: 80rpx;
        box-sizing: border-box;
        text-align:center;
        border-bottom: 1px solid #f4f4f4;
        border-top: 1px solid #f4f4f4;
        padding: 15rpx;
        position: fixed;
        z-index: 10;
        background-color: #fff;
    }
    .modal-box{
        position:fixed;
        width:100%;
        height:100%;
        top:80rpx;
        background:rgba(0,0,0,0.4);
        overflow: hidden;
    }

    .modal-body{
        position:relative;
    }

    .modal-content{
        /* width: 60%; */
        overflow: hidden;
        /*border-radius: 10rpx;*/
    }

    .modal-content{
        width: 100%;
    }
    .mt25{
        border-top: 25rpx solid #f4f4f4;
        background-color: #fff;

    }
    .list{
        display: flex;
        flex-direction: row;
        align-items: center;
        box-sizing: border-box;
        padding-left:4vw;
    }
    .item{
        display: flex;
        flex-direction: row;
        width: 100%;
        align-items: center;
        box-sizing: border-box;
        padding: 2.5vw 4vw 2.5vw 0;
        border-bottom: 1px solid #f4f4f4;
    }
    .addChild{
        height: 60rpx;
        text-align: center;
        box-sizing: content-box;
    }
    .addChild .text{
        color: #82AEFF;
    }
    .headerImg{
        width: 60rpx;
        height: 60rpx;
        border-radius: 60rpx;
        margin-right: 25rpx;
    }
    .icon_right{
        width: 30rpx;
        height: 24rpx;
    }
    .text{
        font-size: 14px;
        font-weight:300;
        color: #666;
    }
    .flex1{
        flex: 1;
    }
    .swiper{
        height: 220px!important;
        width: 100vw;
        justify-content: flex-start;
        margin-top: 80rpx;

    }
    .bg{
        background: url("http://glass.unimker.com/assets/images/photo001.png") no-repeat center center;
        background-size: cover;
        display: flex;
        align-items: flex-end;
    }
    .swiperBottom{
        display: flex;
        flex-direction: row;
        width: 100vw;
        align-items: center;
        color: #fff;
        padding: 0 4vw;
        box-sizing: border-box;
        margin-bottom: 1vw;
    }
    .title{
        display: flex;
        flex: 1;
        font-size: 20px;
    }
    .iconImg{
        width: 15rpx;
        height: 20rpx;
    }
    .address{
        font-size: 12px;
        font-weight: 300;
        padding: 0 12rpx;
    }
    .inspect{
        padding: 0 4vw;
        margin-top: 8vw;
        width: 100vw;
        box-sizing: border-box;
    }
    .line{
        border-left:1px dashed #ccc;
        margin-left: 2vw;
        width: 90vw;
        display: flex;
        flex-direction: column;
    }
    .year{
        background: url("http://glass.unimker.com/assets/images/b004.png") no-repeat center center;
        background-size: cover;
        width: 13vw;
        height: 6vw;
        padding-top: 2rpx;
        box-sizing: border-box;
        padding-left:16rpx;
        font-size: 12px;
        color: #fff;
        font-weight: 300;
        position: relative;
        left:-2vw;
        margin-bottom: 4vw;
    }
    .iconImgLeft{
        width: 4vw;
        height: 4vw;
        position: relative;
        left: -2vw;
        margin-right: 10rpx;

    }
    .history{
        margin-bottom: 5vw;
    }
    .historyTitle{
        font-size: 16px;
        color: #c9c9c9;
        font-weight: 300;
    }
    .historyList{
        background-color: #EFEFEF;
        display: flex;
        flex-direction: row;
        align-items: center;
        box-sizing: border-box;
        margin: 2vw 3vw 2vw 5vw;
        padding: 1.5vw;
    }
    .listLeft{
        display: flex;
        flex-direction: column;
        flex: 1;
        height: 80rpx;
        justify-content: center;
        line-height: 40rpx;
    }
    .leftEye,.rightEye{
        color: #555;
        font-size: 13px;
        font-weight:400;
    }
    .icon-left{
        color: #999;
        font-size: 18px;
    }
    .container2{
        width: 100vw;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .addFristChild{
        font-size: 14px;
        color: #7e7bff;
        font-weight: 300;
    }
</style>
<template>
    <view class="container" wx:if="{{defaultChildId}}">

        <view class="topBar" bindtap="show">
            <view>{{defaultChildName}}</view>
            <image class="down" src="{{'../asset/8.png'}}" />
        </view>
        <swiper class="swiper" bindanimationfinish="changeStore" current="{{currentIndex}}">
            <block wx:for="{{swipeList}}" wx:key="{{item.id}}">
                <swiper-item class="bg" style="background: url({{baseUrl+(item.logo)}}) no-repeat center center;background-origin: 100% 100%;background-size: cover;" current-item-id="{{item.id}}">
                    <view class="swiperBottom" @tap="goStoreDetail" id="{{item.id}}">
                        <view class="title">{{item.storename||''}}</view>
                        <image class="iconImg" src="../asset/15.png" alt=""/>
                        <view class="address">
                            {{item.cityarea||''}}
                        </view>
                        <image  class="iconImg" src="../asset/13.png" alt=""/>
                    </view>
                </swiper-item>
            </block>
        </swiper>
        <view class="inspect">
            <view class="line">
                <block wx:for="{{inspect}}"  wx:key="{{index}}">
                    <view class="year">{{item[0].year+'年'}}</view>
                    <block wx:for="{{item}}" wx:key="h.id" wx:for-item="h">
                        <view class="history">
                            <view class="historyTitle">
                                <image class="iconImgLeft" src="../asset/24.png" alt=""/>
                                {{h.mon+'月'+h.day+'日'}}
                            </view>
                            <view class="historyList" @tap="govVision" data-logId="{{h.id}}">
                                <view class="listLeft">
                                    <view class="leftEye">裸眼视力：左眼{{h.item14}}，右眼{{h.item13}}</view>
                                    <view class="rightEye">戴镜视力：左眼{{h.item16}}，右眼{{h.item15}}</view>
                                </view>
                                <view class="iconfont icon-left"></view>
                            </view>
                        </view>
                    </block>
                </block>
            </view>
        </view>



        <view class="modal-box" hidden="{{flag}}">

            <view class="modal-body">

                <view class="modal-content mt25">
                   <repeat for="{{childrenList}}">
                       <view class="list">
                           <view class="item" @tap="hide" data-id="{{item.id}}" data-nickname="{{item.nickname}}">
                               <image src="{{item.avatarurl}}" class="headerImg"/>
                               <view class="text flex1">{{item.nickname}}</view>
                               <image wx:if="{{item.id==defaultChildId}}" src="../asset/12.png" class="icon_right"/>
                           </view>
                       </view>
                   </repeat>
                    <view class="list">
                        <view class="item addChild" @tap="goAddChildren">
                            <view class="text flex1">+ 添加孩子</view>
                        </view>
                    </view>
                </view>
            </view>
        </view>
    </view>
    <view class="container container2" wx:if="{{!defaultChildId}}">
        <view class="addFristChild" @tap="goAddChildren">关联孩子</view>
    </view>

</template>

<script>
    import wepy from 'wepy'
    import testMixin from '../mixins/test'
    import requestUrl from '../mixins/service'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '眼镜小程序',
            enablePullDownRefresh:true//允许整个页面滚动上拉下拉加载数据
        }

        mixins = [testMixin]//全局变量

        data = {
            swipeList:[],//轮播列表
            currentIndex:0,
            flag:true,//弹层开关
            inspect:[],//孩子检查历史列表
            isLoad:true,//第一次去掉onShow中多次获取childrenList
            page:1,
            total:11,
        }

        computed = {

        }


        methods = {
            show:function () {
                this.flag=!this.data.flag
                this.$apply()
            },
            hide:function (e) {
                const self = this
                var id = e.currentTarget.dataset.id
                var nickname=e.currentTarget.dataset.nickname
                if(id!=this.data.defaultChildId){
                    this.defaultChildId=id
                    this.defaultChildName=nickname
                    this.$apply()
                    wepy.setStorage({key: 'defaultChild', data:{id: id,nickname:nickname}})
                    self.onPullDownRefresh() //获取视力检查数据
                }

                this.flag=true
                this.$apply()
            },
            goAddChildren:function () {
                this.flag=true
                this.$apply()
                wepy.navigateTo({url: 'addChildren'})
            },
            goStoreDetail(e){
                console.log(e);
                wepy.navigateTo({url: 'storeDetail?id='+e.currentTarget.id})
            },
            govVision(e){
                wepy.navigateTo({url: 'optometry?id='+e.currentTarget.dataset.logid})
            },
            changeStore(e){
                console.log(e);
                this.storeId=this.data.swipeList[e.detail.current].id
                this.$apply()
                wepy.setStorage({key: 'storeId', data: this.data.storeId}) //更新storeId
                this.onPullDownRefresh() //获取视力检查数据
            },

        }
        onReachBottom() {
            wx.showLoading({
                title: '玩命加载中',
            })
            if(this.total<this.data.page*10){
                wx.hideLoading();
                return
            }
            this.page=this.data.page+1
            this.$apply()
            this.eyesTested(this.page)
        }
        onPullDownRefresh(){
            wx.showNavigationBarLoading();
            this.page=1
            this.total=11
            this.inspect=[]
            this.$apply()
            this.eyesTested(this.page)
        }
        relationChild(){
            const self = this
            requestUrl('getChildrenList').then(res =>{
                if(res.data.length){
                    self.childrenList=res.data
                    if(!self.data.defaultChildId){
                        self.defaultChildName  = res.data[0].nickname
                        self.defaultChildId=res.data[0].id
                        self.$apply()
                        wepy.setStorage({key: 'defaultChild', data:{id: res.data[0].id,nickname:res.data[0].nickname}})
                    }
                    wepy.setStorage({key: 'childrenList', data:res.data})
                    self.onPullDownRefresh() //获取视力检查数据
                    self.getStoreList() //获取门店列表
                }else {
                    //未关联任何孩子
                   // wepy.navigateTo({url:'addChildren'})
                }


            }).catch(err =>{
                //console.log(err);
            })
        }
        translateArr(arr){
            var returnArr=[]
            var yearList=[]
            arr.forEach(item=>{
                let year= item.check_time.split('-')[0]
                item.year=year
                item.mon=item.check_time.split('-')[1]
                item.day=item.check_time.split('-')[2]
                let index=yearList.findIndex(function(i){return i == year})
                if(index>-1){
                    returnArr[index].push(item)
                }else {
                    yearList.push(year)
                    returnArr.push([item])
                }
            })
            return returnArr
        }

        eyesTested(page){
            const self = this
            var sendData={id:this.data.defaultChildId,store_id:self.storeId}
            if(page){
                sendData.page=page
            }
            if(this.data.defaultChildId){
                requestUrl('getVisionStats',sendData).then(res=>{
                    self.inspect=  self.translateArr(self.inspect.concat(res.data.rows))
                    self.total=res.data.total
                    self.$apply()
                    wx.hideNavigationBarLoading();
                    // 停止下拉动作
                    wx.stopPullDownRefresh();
                    wx.hideLoading();
                    console.log(self.inspect);
                }).catch(err=>{
                    console.log(err);
                    wx.hideNavigationBarLoading();
                    // 停止下拉动作
                    wx.stopPullDownRefresh();
                    wx.hideLoading();
                })
            }

        }

        login(code){
            const self = this
            wepy.request({
                url: 'http://glass.unimker.com/api/login',
                data: {
                    code: code,
                    storeId: this.data.storeId
                },
                method: 'POST',
                success: function (d) {
                    if (d.statusCode == 200) {
                        var temp = {user_id: d.data.data.user_id, login_token: d.data.data.login_token}

                        let data=d.data.data
                        console.log(data);
                        if(data.avatarurl){
                            let userInfo = {
                                avatarUrl:self.baseUrl+data.avatarurl,
                                nickName:data.nickname,
                                mobile:data.mobile,
                                birthday:data.birthday
                            }
                            wepy.setStorage({key: 'userInfo', data: userInfo,success:function () {
                            }})
                        }

                        wepy.setStorage({key: 'baseData', data: temp,success:function () {
                            self.relationChild() //关联孩子
                        }})


                    }
                },
                fail: function (err) {
                    wx.showToast({title: '登录失败',icon:'none'})
                    console.log(err);
                }
            })
        }


        getStoreList(){
            const self =this
            requestUrl('getStoreList').then(res=>{

                if(res.code==1){
                    self.swipeList=res.data
                    self.currentIndex= res.data.findIndex(function (item) {
                        return item.id == self.storeId-0
                    })
                    self.$apply()

                }
            }).catch(err=>{
                console.log(err);
            })
        }

        auth(){
            const  self = this
            wepy.login({
                success: function (res) {
                    console.log('获取成功 code======>', res.code);
                    wepy.setStorage({key: 'isAuth', data: true,success:function () {
                        self.relationChild() //关联孩子
                    }})

                    self.login(res.code)
                },
                fail:function () {
                    wx.showToast({title: '授权失败',icon:'none'})

                }
            })
        }
        onLoad(option) {

            console.log('index load');
            let self = this
            //wepy.showToast({title: 'storeId是 '+option.scene})
            wx.checkSession({
                success: function(res){
                    var temp = wx.getStorageSync('isAuth')
                    console.log('temp=====> '+temp);
                    wx.showToast({title: temp,icon:'none'})
                    if(!temp){
                        self.auth()
                    }
                    //获取列表
                    wx.getUserInfo({
                        success: res => {
                            //如果用户点击过授权，可以直接获取到信息
                            console.log(res.userInfo)

                        }
                    })
                    self.relationChild()
                },
                fail: function(res){

                    console.log("需要重新登录");
                    self.auth()
                }
            })
           
            if(option.scene){
                this.storeId=option.scene
                wepy.setStorage({key: 'storeId', data: option.scene}) //进来设置微信的storeId
            }else {
                wepy.setStorage({key: 'storeId',data:'1'}) //进来设置微信的storeId
            }

        }

    }
</script>
