<template>
    <div class="container">
        <div class="content">
            <div class="list marginTop25rpx">
                <div class="item" @tap="uploadImg">
                    <span class="leftTitle flex1">头像</span>
                    <image src="{{avatarUrl}}" class="childrenAvatar "/>
                    <span class="iconfont icon-left"></span>
                </div>
            </div>
            <div class="list">
                <div class="item">
                    <span class="leftTitle">昵称</span>
                    <input class="text flex1" maxlength="10" type="text" value="{{nickName}}"
                           bindblur="changeNickName"/>
                    <span class="iconfont icon-left"></span>
                </div>
            </div>
            <div class="list">
                <div class="item">
                    <span class="leftTitle">性别</span>
                    <picker bindchange="bindPickerChange" value="{{index}}" range="{{array}}" class="flex1">
                        <view class="text">
                            {{array[index]}}
                        </view>
                    </picker>
                    <span class="iconfont icon-left"></span>
                </div>
            </div>
            <div class="list">
                <div class="item">
                    <span class="leftTitle">出生日期</span>
                    <picker mode="date" value="{{date}}" start="1990-09-30" end="2018-10-01" class="flex1"
                            bindchange="bindDateChange">
                        <view class="text">
                            {{date}}
                        </view>
                    </picker>
                    <span class="iconfont icon-left"></span>
                </div>
            </div>
            <div class="list">
                <div class="item">
                    <span class="leftTitle">身高</span>
                    <input class="text flex1" maxlength="3" type="number" value="{{height}}" placeholder="单位cm"
                           bindblur="changeHeight"
                           placeholder-class="placeholderClass"/>
                    <span class="iconfont icon-left"></span>
                </div>
            </div>
            <div class="list">
                <div class="item">
                    <span class="leftTitle">体重</span>
                    <input class="text flex1" maxlength="3" type="number" value="{{weight}}" placeholder="单位kg"
                           bindblur="changeWeight"
                           placeholder-class="placeholderClass"/>
                    <span class="iconfont icon-left"></span>
                </div>
            </div>
        </div>
        <canvas canvas-id='myCanvas' class="opacity0"></canvas>
        <div class="last">
            <button class="add" bindgetuserinfo="addChildren"  open-type="getUserInfo">{{childrenId ? '更新' : '添加'}}</button>
            <div class="{{childrenId?'delete':'displayNone'}}" @tap="deleteChildren">删除</div>
        </div>

    </div>
</template>
<script>
    import wepy from 'wepy'
    import upng from 'upng-js'
    import testMixin from '../mixins/test'
    import request from '../mixins/service'

    export default class addChildren extends wepy.page {
        config = {
            navigationBarTitleText: '添加孩子'
        }
        data = {
            defaultChildId: wepy.getStorageSync('defaultChild').id,
            childrenId: null,
            date: '2012-09-01',
            nickName: '',
            array: ['女', '男'],
            index: 1,//默认男
            avatarUrl: '',
            height: null,
            weight: null,
            gender:wepy.getStorageSync('defaultChild').gender,
        }

        mixins = [testMixin]
        methods = {
            bindDateChange: function (e) {
                console.log('picker发送选择改变，携带值为', e.detail.value)
                this.date = e.detail.value
            },
            bindPickerChange: function (e) {
                console.log('index为', e.detail.value)

                this.index = e.detail.value
            },

            changeWeight: function (e) {
                console.log('值为', e.detail.value)
                this.weight = e.detail.value
            },
            changeHeight: function (e) {
                this.height = e.detail.value

            },
            changeNickName: function (e) {
                this.nickName = e.detail.value
            },


            deleteChildren() {
                const self = this
                let defaultChildId = wepy.getStorageSync('defaultChildId').id
                if(defaultChildId.id==this.data.childrenId){
                    wx.showToast({title:'不能删除默认的孩子',icon:'none'})
                    return
                }
                wx.showModal({
                    title: '删除提示', content: '确认删除孩子', success: function (res) {
                        if (res.confirm) {
                            request('delChild', {id: self.data.childrenId}).then((res) => {
                                console.log(res);
                                if (res.code == 1) {
                                    wepy.showToast({title: res.message})
                                    setTimeout(function () {
                                        wepy.navigateBack({
                                            delta: 1
                                        })
                                    }, 1500)

                                } else {
                                    wepy.showToast({title: res.message, icon: 'none'})
                                }
                            }).catch((err) => {
                                wx.showToast({title: err.error, icon: 'none'})
                            })
                        } else if (res.cancel) {
                            console.log('用户点击取消')
                        }
                    }
                })

            },

            uploadImg: function () {
                const self = this

                wx.chooseImage({
                    success: res => {
                        //生成的图片临时路径画成canvas
                        const ctx = wx.createCanvasContext('myCanvas')
                        const platform = wx.getSystemInfoSync().platform
                        const imgWidth = 60, imgHeight = 60;
                        ctx.drawImage(res.tempFilePaths[0], 0, 0, imgWidth, imgHeight)
                        ctx.draw(false, () => {
                            wx.canvasGetImageData({
                                canvasId: 'myCanvas',
                                x: 0,
                                y: 0,
                                width: imgWidth,
                                height: imgHeight,
                                success: res => {

                                    if (platform === 'ios') {
                                        // 兼容处理：ios获取的图片上下颠倒

                                        res = self.reverseImgData(res)
                                    }

                                    // 3. png编码
                                    let pngData = upng.encode([res.data.buffer], res.width, res.height)
                                    // 4. base64编码

                                    let base64 = wx.arrayBufferToBase64(pngData)

                                    console.log('data:image/jpeg;base64,' + base64)
                                    let newBase64 = 'data:image/jpeg;base64,' + base64
//                                    self.setData({
//                                        avatarUrl: 'data:image/jpeg;base64,' + base64
//                                    });
                                    self.avatarUrl = 'data:image/jpeg;base64,' + base64
                                    self.$apply()

                                },
                                fail(res) {
                                    wx.showToast({title: '图片编译错误',icon:'none'})

                                    console.log(res)
                                },
                            })
                        })
                    }
                })
            },
            //ios图片处理


//          const self = this
//          wx.chooseImage({
//            count:1,
//            success:function (temp) {
//              if(temp.tempFilePaths.length){
//                var tempFilePaths = temp.tempFilePaths
//                
//                wx.getImageInfo({
//                  src:tempFilePaths[0],
//                  success:function (res) {
//                    console.log(res.width)
//                    console.log(res.height)
//                  }
//                })
//                wx.request({
//                  url: tempFilePaths[0],
//                  method: 'GET',
//                  responseType: 'arraybuffer',
//                  success: function (res) {
//                    
//                    var base64 = wx.arrayBufferToBase64(res.data);
//                    
//                    self.setData({
//                      avatarUrl: 'data:image/jpg;base64,' + base64
//                    })
//                  }
//                });
//
//                
//
//
//
//
//
////                self.$apply()
//
//                //self.setData({avatarUrl: 'data:image/jpg;base64,' + base64})
//
//
//              }
//              console.log(temp);
//            },
//            fail:function (err) {
//              console.log(err);
//            }
//          })
//        }
        }

        addChildren(e) {
            let self = this
            
            if(!e.detail.userInfo){
                wx.showToast({title: '需要您的授权',icon:'none'})
                return
            }
            let sendData = {
                avatar: this.data.avatarUrl,
                nickname: this.data.nickName,
                sex: this.data.index,
                birthday: this.data.date,
                height: this.data.height,
                weight: this.data.weight
            }
            if (this.data.childrenId) {
                sendData.id = this.data.childrenId

            }
            if(!wx.getStorageSync('userInfo').nickName){
                let sendUserInfoData={
                    nickName:self.userInfo.nickName,
                    avatarUrl:self.userInfo.avatarUrl,
                    sex:self.userInfo.gender
                }
                request('authBind',sendUserInfoData).then(res=>{
                    console.log(res);
                    
                    if(res.code1!=1){
                        wx.showToast({title: res.message,icon:'none'})
                    }
                }).catch(err=>{
                    console.log(err);
                })
                wepy.setStorage({key: 'userInfo', data: e.detail.userInfo})
            }
            request('addChildren', sendData).then((res) => {
                console.log(res);
                if (res.code == 1) {
                    wepy.showToast({title: res.message})
                    
                    if (!self.data.childrenId) {
                        wepy.setStorage({key: 'defaultChildId', data: {id: res.data.id,nickname:res.data.nickname}})
                    }
                    var oldChildrenList = wx.getStorageSync('childrenList')
                    if(!sendData.id){  //add
                        wepy.setStorage({key: 'childrenList', data:oldChildrenList.concat(res.data)})
                    }else { //update
                        oldChildrenList.forEach(item=>{
                            if(item.id==sendData.id){
                                item=res.data
                            }
                        })
                        wepy.setStorage({key: 'childrenList', data:oldChildrenList})
                    }


                    setTimeout(function () {
                        wepy.navigateBack({
                            delta: 1
                        })
                    }, 1500)
                } else {
                    wepy.showToast({title: res.message, icon: 'none'})
                }
            }).catch((err) => {
                console.log(err);
                wepy.showToast({title: err.message, icon: 'none'})
            })


        }


        reverseImgData(res) {
            var w = res.width
            var h = res.height
            let con = 0
            for (var i = 0; i < h / 2; i++) {
                for (var j = 0; j < w * 4; j++) {
                    con = res.data[i * w * 4 + j]
                    res.data[i * w * 4 + j] = res.data[(h - i - 1) * w * 4 + j]
                    res.data[(h - i - 1) * w * 4 + j] = con
                }
            }
            return res
        }

        getChildInfo(data) {

            this.weight = data.weight
            this.height = data.height
            this.date = data.birthday// res.data
            this.nickName = data.nickname
            this.index = data.sex
            this.avatarUrl = this.baseUrl + data.avatarurl
            this.$apply()
        }

        onLoad(option) {
            console.log(option);
            let self = this
            this.childrenId = option.id || null
            if (option.id) {
                request('getChildInfo', {id: option.id}).then(res => {
                    console.log(res.data);
//                    self.data.date=res.data.birthday// res.data
//                    self.nickName= res.data.nickname
//                    self.index=res.data.sex//默认男
//                    self.avatar=res.data.avatarurl
                    self.getChildInfo(res.data)
                }).catch(err => {

                })
            } else {
                this.avatarUrl = ''
                this.height = ''
                this.weight = ''
                this.nickName = ''
                this.date = '1999-01-01'

            }
//            header: {
//              'Content-Type': 'application/x-www-form-urlencoded'
//            },


        }
    }
</script>
<style>
    .container {
        height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
        background-color: #f3f3f3;
    }

    .opacity0 {
        opacity: 0;
        width: 60px;
        height: 60px;
        position: absolute;
        left: -1000px;
        bottom: 100px;
    }

    .displayNone {
        display: none;
    }

    .marginTop25rpx {
        margin-top: 25 rpx;
    }

    .list {
        width: 100vw;
        display: flex;
        background-color: #fff;
        box-sizing: border-box;
        padding-left: 3vw;
        min-height: 9vh;
    }

    .item {
        width: 97vw;
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 3vw;
        padding-left: 0;
        box-sizing: border-box;
        border-bottom: 1px solid #f3f3f3;
    }

    .flex1 {
        flex: 1
    }

    .leftTitle {
        font-size: 13px;
        font-weight: 400;
        color: #666;
    }

    .childrenAvatar {
        width: 60px;
        height: 60px;
        border-radius: 14vw;
        margin-right: 2vw;
        overflow: hidden;
    }

    .text {
        margin-right: 5vw;
        font-size: 13px;
        font-weight: 400;
        color: #666;
        text-align: right;
    }

    .placeholderClass {
        color: #bbb;
    }

    .add, .delete {

    }

    .last {
        display: flex;
        flex-direction: column;
    }

    .add {
        display: inline-block;
        width: 70vw;
        text-align: center;
        margin: 0 auto;
        height: 40px;
        line-height: 40px;
        border-radius: 40px;
        /*position: absolute;*/
        /*left: 15vw;*/
        font-size: 16px;
        font-weight: 300;
        background: linear-gradient(to right, #32ECAC, #01C1D7);
        color: #fff;
        margin-bottom: 20px;
    }

    .delete {
        display: inline-block;
        width: 70vw;
        text-align: center;
        margin: 0 auto;
        height: 40px;
        line-height: 40px;
        border-radius: 40px;
        /*position: absolute;*/
        left: 15vw;
        font-size: 16px;
        font-weight: 300;
        border: 1px solid #333;
        color: #333;
        margin-bottom: 20px;
    }
</style>
