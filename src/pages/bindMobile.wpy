<template>
    <div class="container">
        <div class="content">
            <div class="tip">
                为了保护您的账号安全，请绑定您的手机号
            </div>
            <div class="list">
                <div class="item">
                    <span class="leftTitle">手机号</span>
                    <input class="text flex1" maxlength="11" type="number" placeholder="请输入您的手机号" value="{{userInfo.mobile}}"
                           bindblur="changeMobile" placeholder-class="placeholderClass"/>
                </div>
            </div>
            <div class="list">
                <div class="item">
                    <span class="leftTitle">验证码</span>
                    <input class="text flex1" maxlength="6" type="number" placeholder="请输入验证码" value="{{code}}"
                           bindblur="changeCode" placeholder-class="placeholderClass"/>
                    <span class="leftTitle {{noTime?'':'color'}}"
                          @tap="reqCode">{{noTime ? (time - noTime) + 's' : '获取验证码'}}</span>
                </div>
            </div>
        </div>
        <div class="last">
            <div class="update" @tap="submit">提交绑定</div>
        </div>

    </div>
</template>
<script>
    import wepy from 'wepy'
    import upng from 'upng-js'
    import request from '../mixins/service'

    export default class bindMobile extends wepy.page {
        config = {
            navigationBarTitleText: '绑定手机'
        }
        data = {
            code: null,
            time: 60,
            noTime: 0,
            isLoading: false,
            code_token:''
        }

        timer() {
            this.noTime++
            this.$apply()

        }

        //mixins = [testMixin]
        methods = {
            submit: function () {

                var sendData={
                    code:this.data.code,
                    code_token:this.data.code_token,
                    mobile:this.userInfo.mobile
                }
                if(!sendData.mobile){
                    wx.showToast({title:'请输入手机号',icon:'none'})
                }
                if(!sendData.code){
                    wx.showToast({title:'请输入验证码',icon:'none'})
                }

                request('mobileBind', sendData).then(f => {
                    console.log('code=========>' + f);

                    if(f.code!=1){
                        wx.showToast({title:f.message,icon:'none'})
                    }else {
                        wx.showToast({title:'绑定成功'})
                        setTimeout(function () {
                            wepy.navigateBack({delta:2})
                        },1500)
                    }

                }).catch(err => {
                    console.log(err);
                })
            },
            reqCode: function () {
                const  self= this
                if (!this.data.isLoading) {
                    this.isLoading = true
                    this.$apply()
                    this.timer()

                    request('sendSms', {mobile: this.userInfo.mobile}).then(res => {
                        if (res.code == 1) {
                            console.log('开始计时');
                            self.code_token=res.data.code_token
                            self.$apply()

                            var s = setInterval(() => {
                                self.timer()
                                //console.log('剩余 ' + (time - noTime) + 's');
                                if (self.data.noTime >= slef.data.time) {
                                    self.noTime = 0
                                    self.isLoading = false
                                    self.$apply()
                                    clearInterval(s)

                                }
                            }, 1000)
                        }else {
                            wx.showToast({title:res.message,icon:'none'})
                            self.noTime = 0
                            self.isLoading = false
                            self.$apply()
                        }
                    }).catch(err => {

                    })

                }
            },
            changeMobile: function (e) {
                this.userInfo.mobile = e.detail.value
            },
            changeCode: function (e) {
                this.code = e.detail.value
            }
        }


        onLoad(option) {
            this.$parent.getGlobalData(this)
        }
    }
</script>
<style>
    .container {
        height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
        background-color: #f3f3f3;
    }

    .tip {
        display: flex;
        align-items: center;
        text-align: left;
        height: 8vh;
        color: #999;
        font-size: 14px;
        padding: 0 3vw;
    }

    .list {
        width: 100vw;
        display: flex;
        background-color: #fff;
        box-sizing: border-box;
        padding-left: 3vw;
        min-height: 9vh;
    }

    .item {
        width: 97vw;
        display: flex;
        flex-direction: row;
        align-items: center;
        padding: 3vw;
        padding-left: 0;
        box-sizing: border-box;
        border-bottom: 1px solid #f3f3f3;
    }

    .flex1 {
        flex: 1
    }

    .leftTitle {
        font-size: 13px;
        font-weight: 400;
        color: #666;
    }

    .text {
        padding-left: 3vw;
        margin-right: 5vw;
        font-size: 13px;
        font-weight: 400;
        color: #666;
    }

    .placeholderClass {
        color: #bbb;
    }

    .last {
        display: flex;
        flex-direction: column;
    }

    .update {
        display: inline-block;
        width: 70vw;
        text-align: center;
        margin: 0 auto;
        height: 40px;
        line-height: 40px;
        border-radius: 40px;
        /*position: absolute;*/
        left: 15vw;
        font-size: 16px;
        font-weight: 300;
        background: linear-gradient(to right, #32ECAC, #01C1D7);
        color: #fff;
        margin-bottom: 20px;
    }

    .color {
        color: #3ad9d4;
    }


</style>
